neutral.color = "gray60",
saveToFile = eatt.prefix,
plotDIR = "../plots_maf_trachemys/"
)
devtools::load_all()
alphaBetaPlot(
eatt.gene.outliers,
alpha.color = "cornflowerblue",
beta.color = "firebrick",
neutral.color = "gray60",
saveToFile = eatt.prefix,
plotDIR = "../plots_maf_trachemys/"
)
devtools::load_all()
alphaBetaPlot(
eatt.gene.outliers,
alpha.color = "cornflowerblue",
beta.color = "firebrick",
neutral.color = "gray60",
saveToFile = eatt.prefix,
plotDIR = "../plots_maf_trachemys/"
)
devtools::load_all()
alphaBetaPlot(
eatt.gene.outliers,
alpha.color = "cornflowerblue",
beta.color = "firebrick",
neutral.color = "gray60",
saveToFile = eatt.prefix,
plotDIR = "../plots_maf_trachemys/"
)
install.packages("concaveman")
alphaBetaPlot(
eatt.gene.outliers,
alpha.color = "cornflowerblue",
beta.color = "firebrick",
neutral.color = "gray60",
saveToFile = eatt.prefix,
plotDIR = "../plots_maf_trachemys/"
)
alphaBetaPlot(
eatt.gene.outliers,
alpha.color = "cornflowerblue",
beta.color = "firebrick",
neutral.color = "gray60",
plotDIR = "../plots_maf_trachemys/",
)
alphaBetaPlot(
eatt.gene.outliers,
alpha.color = "cornflowerblue",
beta.color = "red",
neutral.color = "gray60",
saveToFile = eatt.prefix,
plotDIR = "../plots_maf_trachemys/",
)
alphaBetaPlot(
eatt.gene.outliers,
alpha.color = "cornflowerblue",
beta.color = "red",
neutral.color = "gray60",
saveToFile = eatt.prefix,
plotDIR = "../plots_maf_trachemys/", padding = 0.2
)
alphaBetaPlot(
eatt.gene.outliers,
alpha.color = "cornflowerblue",
beta.color = "red",
neutral.color = "gray60",
saveToFile = eatt.prefix,
plotDIR = "../plots_maf_trachemys/", padding = 0.4
)
alphaBetaPlot(
eatt.gene.outliers,
alpha.color = "cornflowerblue",
beta.color = "red",
neutral.color = "gray60",
saveToFile = eatt.prefix,
plotDIR = "../plots_maf_trachemys/", padding = 0.4
)
alphaBetaPlot(
eatt.gene.outliers,
alpha.color = "cornflowerblue",
beta.color = "green",
neutral.color = "gray60",
saveToFile = eatt.prefix,
plotDIR = "../plots_maf_trachemys/", padding = 0.2
)
alphaBetaPlot(
eagu.gene.outliers,
alpha.color = "cornflowerblue",
beta.color = "firebrick3",
neutral.color = "gray60",
saveToFile = eagu.prefix,
plotDIR = "../plots_maf_trachemys/", padding = 0.2,
)
eagu.bgc.genes <-
combine_bgc_output(results.dir = genesDIR,
prefix = eagu.prefix)
eagu.gene.outliers <-
get_bgc_outliers(
df.list = eagu.bgc.genes,
admix.pop = eagu.admixPop,
popmap = file.path(
"../bgcPlotter/popmaps/",
paste0(eagu.prefix, ".bgc.popmap_final.txt")
),
loci.file = file.path(
"../bgcPlotter/data_vcf_maf_genes/",
paste0(eagu.prefix, "_bgc_loci.txt")
)
)
gutt.bgc.genes <-
combine_bgc_output(results.dir = genesDIR,
prefix = gutt.prefix)
gutt.gene.outliers <-
get_bgc_outliers(
df.list = gutt.bgc.genes,
admix.pop = gutt.admixPop,
popmap = file.path(
"../bgcPlotter/popmaps/",
paste0(gutt.prefix, ".bgc.popmap_final.txt")
),
loci.file = file.path(
"../bgcPlotter/data_vcf_maf_genes/",
paste0(gutt.prefix, "_bgc_loci.txt")
)
)
alphaBetaPlot(
eagu.gene.outliers,
alpha.color = "cornflowerblue",
beta.color = "firebrick3",
neutral.color = "gray60",
saveToFile = eagu.prefix,
plotDIR = "../plots_maf_trachemys/", padding = 0.2,
)
alphaBetaPlot(
eagu.gene.outliers,
alpha.color = "cornflowerblue",
beta.color = "firebrick3",
neutral.color = "gray60",
saveToFile = eagu.prefix,
plotDIR = "../plots_maf_trachemys/", padding = 0.1,
)
alphaBetaPlot(
eagu.gene.outliers,
alpha.color = "cornflowerblue",
beta.color = "firebrick3",
neutral.color = "gray60",
plotDIR = "../plots_maf_trachemys/", padding = 0.1,
)
alphaBetaPlot(
eagu.gene.outliers,
alpha.color = "cornflowerblue",
beta.color = "firebrick3",
neutral.color = "gray60",
saveToFile = eagu.prefix,
plotDIR = "../plots_maf_trachemys/", padding = 0.1,
)
alphaBetaPlot(
eagu.gene.outliers,
alpha.color = "cornflowerblue",
beta.color = "firebrick3",
neutral.color = "gray60",
saveToFile = eagu.prefix,
plotDIR = "../plots_maf_trachemys/", padding = 0.5,
)
alphaBetaPlot(
eagu.gene.outliers,
alpha.color = "cornflowerblue",
beta.color = "firebrick3",
neutral.color = "gray60",
saveToFile = eagu.prefix,
plotDIR = "../plots_maf_trachemys/", padding = 0.1,
)
alphaBetaPlot(
eagu.gene.outliers,
alpha.color = "cornflowerblue",
beta.color = "firebrick3",
neutral.color = "gray60",
saveToFile = eagu.prefix,
plotDIR = "../plots_maf_trachemys/", padding = 0.2
)
alphaBetaPlot(
eatt.gene.outliers,
alpha.color = "cornflowerblue",
beta.color = "firebrick3",
neutral.color = "gray60",
saveToFile = eatt.prefix,
plotDIR = "../plots_maf_trachemys/", padding = 0.2,
)
alphaBetaPlot(
eatt.gene.outliers,
alpha.color = "cornflowerblue",
beta.color = "firebrick",
neutral.color = "gray60",
saveToFile = eatt.prefix,
plotDIR = "../plots_maf_trachemys/", padding = 0.2,
)
alphaBetaPlot(
eatt.gene.outliers,
alpha.color = "cornflowerblue",
beta.color = "orange",
neutral.color = "gray60",
saveToFile = eatt.prefix,
plotDIR = "../plots_maf_trachemys/", padding = 0.2,
)
alphaBetaPlot(
eagu.gene.outliers,
alpha.color = "cornflowerblue",
beta.color = "orange",
neutral.color = "gray60",
saveToFile = eagu.prefix,
plotDIR = "../plots_maf_trachemys/", padding = 0.2
)
alphaBetaPlot(
gutt.gene.outliers,
alpha.color = "cornflowerblue",
beta.color = "orange",
neutral.color = "gray60",
saveToFile = gutt.prefix,
plotDIR = "../plots_maf_trachemys/", padding = 0.2,
)
devtools::load_all()
alphaBetaPlot(
eagu.gene.outliers,
alpha.color = "cornflowerblue",
beta.color = "orange",
neutral.color = "gray60",
saveToFile = eagu.prefix,
plotDIR = "../plots_maf_trachemys/", padding = 0.2
)
devtools::load_all()
alphaBetaPlot(
eagu.gene.outliers,
alpha.color = "cornflowerblue",
beta.color = "orange",
neutral.color = "gray60",
saveToFile = eagu.prefix,
plotDIR = "../plots_maf_trachemys/", padding = 0.2
)
devtools::load_all()
alphaBetaPlot(
eagu.gene.outliers,
alpha.color = "cornflowerblue",
beta.color = "orange",
neutral.color = "gray60",
saveToFile = eagu.prefix,
plotDIR = "../plots_maf_trachemys/", padding = 0.2
)
alphaBetaPlot(
eatt.gene.outliers,
alpha.color = "cornflowerblue",
beta.color = "orange",
neutral.color = "gray60",
saveToFile = eatt.prefix,
plotDIR = "../plots_maf_trachemys/", padding = 0.2,
)
alphaBetaPlot(
gutt.gene.outliers,
alpha.color = "cornflowerblue",
beta.color = "orange",
neutral.color = "gray60",
saveToFile = gutt.prefix,
plotDIR = "../plots_maf_trachemys/", padding = 0.2,
)
library("ggplot2")
library("ggVennDiagram")
rdaLoci <- file.path("combinedTables", "rdaOutlierSNPdata.csv")
eagu <- file.path("combinedTables", "eagu_genesAnnotated.csv")
eatt <- file.path("combinedTables", "eatt_genesAnnotated.csv")
gutt <- file.path("combinedTables", "gutt_genesAnnotated.csv")
introgress <- file.path("combinedTables", "introgressLoci.csv")
setwd("C:/Users/btm/Desktop/MEC_revisions/figures")
rdaOutliers <-
read.csv(
file = rdaLoci,
header = TRUE,
sep = ",",
stringsAsFactors = FALSE
)
eaguOutliers <-
read.csv(
file = eagu,
header = TRUE,
sep = ",",
stringsAsFactors = FALSE
)
eattOutliers <-
read.csv(
file = eatt,
header = TRUE,
sep = ",",
stringsAsFactors = FALSE
)
guttOutliers <-
read.csv(
file = gutt,
header = TRUE,
sep = ",",
stringsAsFactors = FALSE
)
introgressOutliers <- read.csv(
file = introgress,
header = TRUE,
sep = ",",
stringsAsFactors = FALSE)
eaguOutliersLoci <-
data.frame(
"TranscriptId" = eaguOutliers$TranscriptId,
"POS" = eaguOutliers$POS,
"gene" = eaguOutliers$gene,
"product" = eaguOutliers$product
)
eattOutliersLoci <-
data.frame(
"TranscriptId" = eattOutliers$TranscriptId,
"POS" = eattOutliers$POS,
"gene" = eattOutliers$gene,
"product" = eattOutliers$product
)
guttOutliersLoci <-
data.frame(
"TranscriptId" = guttOutliers$TranscriptId,
"POS" = guttOutliers$POS,
"gene" = guttOutliers$gene,
"product" = guttOutliers$product
)
rdaOutliersLoci <-
data.frame(
"TranscriptId" = rdaOutliers$transcriptID,
"POS" = rdaOutliers$pos,
"predictor" = rdaOutliers$predictor,
"correlation" = rdaOutliers$correlation,
"gene" = rdaOutliers$gene
)
introgressOutliersLoci <-
data.frame("gene" = introgressOutliers$introgressLoci)
# Merge the dataframes together.
merged <- Reduce(
function(x, y)
merge(x = x, y = y, by = "gene", all.x = TRUE, all.y = TRUE),
list(
eaguOutliersLoci,
eattOutliersLoci,
guttOutliersLoci
)
)
genes <-
list(
"Introgress" = as.character(introgressOutliersLoci$gene),
"BGC" = as.character(merged$gene),
"RDA" = as.character(rdaOutliersLoci$gene))
total_unique_genes <-
length(unique(c(genes$Introgress, genes$BGC, genes$RDA)))
p <-
ggVennDiagram::ggVennDiagram(genes, label = "both", color = "black") +
ggplot2::scale_fill_gradient(low = "white", high = "white")
ggplot2::ggsave(
filename = "./combinedPlots/vennDiagram_genes.pdf",
plot = p,
device = "pdf",
width = 7,
height = 7,
dpi = 300,
units = "in"
)
devtools::load_all()
setwd("D:/scripts/ClinePlotR")
devtools::load_all()
devtools::document()
setwd("C:/Users/btm/Desktop/MEC_revisions/figures/combinedTables")
eagu.bgc <- read.table(file = "eagu_genesAnnotated.csv",
header = TRUE,
sep = ",",
stringsAsFactors = FALSE)
eatt.bgc <- read.table(file = "eatt_genesAnnotated.csv",
header = TRUE,
sep = ",",
stringsAsFactors = FALSE)
gutt.bgc <- read.table(file = "gutt_genesAnnotated.csv",
header = TRUE,
sep = ",",
stringsAsFactors = FALSE)
rda <- read.table(file = "rdaOutlierSNPdata.csv",
header = TRUE,
sep = ",",
stringsAsFactors = FALSE)
eagu.combo <- merge(eagu.bgc, rda, by = "gene", all = TRUE)
eagu.combo <-
merge(eagu.bgc,
rda,
by = "gene",
all.x = FALSE,
all.y = TRUE)
View(eagu.combo)
eagu.combo <-
merge(eagu.bgc,
rda,
by = "gene", all = FALSE)
View(eagu.combo)
gutt.combo <-
merge(gutt.bgc,
rda,
by = "gene", all = FALSE)
eatt.combo <-
merge(eatt.bgc,
rda,
by = "gene", all = FALSE)
rda$predictor
unique(rda$predictor)
rda$envType <- ifelse(grepl(rda$predictor, "t", fixed = TRUE), "temperature", ifelse(grepl(rda$predictor, "p", fixed = TRUE), "precipitation", "wind"))
View(rda)
rda$envType <- ifelse(grepl(rda$predictor, "t"), "temperature", ifelse(grepl(rda$predictor, "p"), "precipitation", "wind"))
rda$envType <- ifelse(grepl("t", rda$predictor), "temperature", ifelse(grepl("p", rda$predictor), "precipitation", "wind"))
View(rda)
eagu.combo <-
merge(eagu.bgc,
rda,
by = "gene", all = FALSE)
eatt.combo <-
merge(eatt.bgc,
rda,
by = "gene", all = FALSE)
gutt.combo <-
merge(gutt.bgc,
rda,
by = "gene", all = FALSE)
View(eagu.combo)
eagu.combo <- eagu.combo[order(eagu.combo$envType, eagu.combo$alpha.excess, eagu.combo$alpha.outlier),]
eagu.combo <-
merge(eagu.bgc,
rda,
by = "gene", all = FALSE)
eagu.combo <- eagu.combo[order(eagu.combo$envType, eagu.combo$alpha.excess, eagu.combo$alpha.outlier),]
eatt.combo <-
merge(eatt.bgc,
rda,
by = "gene", all = FALSE)
eatt.combo <- eatt.combo[order(eatt.combo$envType, eatt.combo$alpha.excess, eatt.combo$alpha.outlier),]
gutt.combo <-
merge(gutt.bgc,
rda,
by = "gene", all = FALSE)
gutt.combo <- gutt.combo[order(gutt.combo$envType, gutt.combo$alpha.excess, gutt.combo$alpha.outlier),]
View(eagu.combo)
eagu.combo <-
merge(eagu.bgc,
rda,
by = "gene", all = FALSE)
eagu.combo <- eagu.combo[order(eagu.combo$envType, eagu.combo$alpha.excess),]
eatt.combo <-
merge(eatt.bgc,
rda,
by = "gene", all = FALSE)
eatt.combo <- eatt.combo[order(eatt.combo$envType, eatt.combo$alpha.excess),]
gutt.combo <-
merge(gutt.bgc,
rda,
by = "gene", all = FALSE)
gutt.combo <- gutt.combo[order(gutt.combo$envType, gutt.combo$alpha.excess),]
View(eagu.combo)
View(eatt.combo)
View(gutt.combo)
all.combo <- rbind(eagu.combo, eatt.combo, gutt.combo)
all.combo <- all.combo(!duplicated(all.combo$gene))
all.combo <- all.combo[!duplicated(all.combo$gene),]
View(all.combo)
rbind(eagu.combo, eatt.combo, gutt.combo)
all.combo <- rbind(eagu.combo, eatt.combo, gutt.combo)
View(all.combo)
eagu.combo$pair <- "eagu"
eatt.combo$pair <- "eatt"
gutt.combo$pair <- "gutt"
View(eagu.combo)
all.combo.long <- reshape2::melt(all.combo, id.vars = "pair")
all.combo <- rbind(eagu.combo, eatt.combo, gutt.combo)
all.combo.long <- reshape2::melt(all.combo, id.vars = "pair")
View(all.combo)
View(all.combo.long)
View(all.combo.long)
View(all.combo)
all.combo$genePair <- paste(all.combo$gene, all.combo$pair, sep = "_")
View(all.combo)
all.combo <- all.combo[!duplicated(all.combo$genePair),]
View(all.combo)
View(all.combo)
dups <- all.combo[duplicated(all.combo$gene),]
View(dups)
library("dplyr")
counts <- all.combo %>%
group_by(gene) %>%
summarise(unique_elements = n_distinct(gene))
View(counts)
View(all.combo)
all.combo <- rbind(eagu.combo, eatt.combo, gutt.combo)
all.combo$genePair <- paste(all.combo$gene, all.combo$pair, sep = "_")
all.combo <- all.combo[!duplicated(all.combo$genePair),]
View(all.combo)
counts <- all.combo %>%
count(gene) %>%
group_by(gene) %>%
mutate(prop = prop.table(n))
View(counts)
View(all.combo)
all.combo <- all.combo[order(all.combo$envType, all.combo$pair, all.combo$beta.excess),]
View(all.combo)
posBetaCount <- table(all.combo)
posBetaCount <- table(all.combo$beta.excess)
table(all.combo$beta.excess)
table(all.combo$beta.excess, all.combo$beta.outlier)
table(all.combo$beta.outlier)
table(all.combo$beta.excess)
