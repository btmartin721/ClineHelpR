# Subset individuals for only the populations I want
rasterPoint.list.subset <-
lapply(rasterPoint.list,
subsetIndividuals,
file.path(dataDIR, "eagu_inds.txt"))
devtools::document()
devtools::load_all()
clinesXenvironment(
clineList = eagu,
rasterPointValues = rasterPoint.list.subset,
clineLabels = c("EA", "Het", "GU"),
outputDIR = file.path(dataDIR, "outputFiles"),
clineMethod = "permutation",
prefix = "EAGU",
)
devtools::document()
devtools::load_all()
clinesXenvironment(
clineList = eagu,
rasterPointValues = rasterPoint.list.subset,
clineLabels = c("EA", "Het", "GU"),
outputDIR = file.path(dataDIR, "outputFiles"),
clineMethod = "permutation",
prefix = "EAGU",
)
# EA X TT
eatt <- runIntrogress(
p1.file = file.path(dataDIR, "EATT_p1data.txt"),
p2.file = file.path(dataDIR, "EATT_p2data.txt"),
admix.file = file.path(dataDIR, "EATT_admix_nocoordscut.txt"),
loci.file = file.path(dataDIR, "EATT_loci.txt"),
clineLabels = c("EA", "Het", "TT"),
minDelt = 0.8,
prefix = "EATT",
outputDIR = file.path(dataDIR, "outputFiles"),
sep = "\t",
fixed = FALSE,
pop.id = FALSE,
ind.id = FALSE
)
setwd("D:/scripts/bgcPlotter/Rscripts/ClinePlotR")
# EA X TT
eatt <- runIntrogress(
p1.file = file.path(dataDIR, "EATT_p1data.txt"),
p2.file = file.path(dataDIR, "EATT_p2data.txt"),
admix.file = file.path(dataDIR, "EATT_admix_nocoordscut.txt"),
loci.file = file.path(dataDIR, "EATT_loci.txt"),
clineLabels = c("EA", "Het", "TT"),
minDelt = 0.8,
prefix = "EATT",
outputDIR = file.path(dataDIR, "outputFiles"),
sep = "\t",
fixed = FALSE,
pop.id = FALSE,
ind.id = FALSE
)
# EA X TT
eatt <- runIntrogress(
p1.file = file.path(dataDIR, "EATT_p1data_nocoordscut.txt"),
p2.file = file.path(dataDIR, "EATT_p2data.txt"),
admix.file = file.path(dataDIR, "EATT_admix_nocoordscut.txt"),
loci.file = file.path(dataDIR, "EATT_loci.txt"),
clineLabels = c("EA", "Het", "TT"),
minDelt = 0.8,
prefix = "EATT",
outputDIR = file.path(dataDIR, "outputFiles"),
sep = "\t",
fixed = FALSE,
pop.id = FALSE,
ind.id = FALSE
)
dir.create(file.path(dataDIR, "rawRoutput"), showWarnings = FALSE)
saveRDS(eagu, file = file.path(dataDIR, "rawRoutput", "eagu_introgress.rds"))
saveRDS(eatt, file = file.path(dataDIR, "rawRoutput", "eatt_introgress.rds"))
# Subset individuals for only the populations I want
rasterPoint.list.subset <-
lapply(rasterPoint.list,
subsetIndividuals,
file.path(dataDIR, "eatt_inds.txt"))
View(rasterPoint.list.subset)
# Correlate genomic clines/hybrid index with environment/lat/lon
clinesXenvironment(
clineList = eatt,
rasterPointValues = rasterPoint.list.subset,
clineLabels = c("EA", "Het", "TT"),
outputDIR = file.path(dataDIR, "outputFiles", "EATT"),
clineMethod = "permutation",
prefix = "EATT"
)
devtools::document()
devtools::load_all()
# Correlate genomic clines/hybrid index with environment/lat/lon
clinesXenvironment(
clineList = eatt,
rasterPointValues = rasterPoint.list.subset,
clineLabels = c("EA", "Het", "TT"),
outputDIR = file.path(dataDIR, "outputFiles", "EATT"),
clineMethod = "permutation",
prefix = "EATT"
)
devtools::load_all()
# Correlate genomic clines/hybrid index with environment/lat/lon
clinesXenvironment(
clineList = eatt,
rasterPointValues = rasterPoint.list.subset,
clineLabels = c("EA", "Het", "TT"),
outputDIR = file.path(dataDIR, "outputFiles", "EATT"),
clineMethod = "permutation",
prefix = "EATT"
)
devtools::load_all()
# Correlate genomic clines/hybrid index with environment/lat/lon
clinesXenvironment(
clineList = eatt,
rasterPointValues = rasterPoint.list.subset,
clineLabels = c("EA", "Het", "TT"),
outputDIR = file.path(dataDIR, "outputFiles", "EATT"),
clineMethod = "permutation",
prefix = "EATT"
)
# Correlate genomic clines/hybrid index with environment/lat/lon
clinesXenvironment(
clineList = eagu,
rasterPointValues = rasterPoint.list.subset,
clineLabels = c("EA", "Het", "GU"),
outputDIR = file.path(dataDIR, "outputFiles", "EAGU"),
clineMethod = "permutation",
prefix = "EAGU",
)
# Subset individuals for only the populations I want
rasterPoint.list.subset <-
lapply(rasterPoint.list,
subsetIndividuals,
file.path(dataDIR, "eagu_inds.txt"))
# Correlate genomic clines/hybrid index with environment/lat/lon
clinesXenvironment(
clineList = eagu,
rasterPointValues = rasterPoint.list.subset,
clineLabels = c("EA", "Het", "GU"),
outputDIR = file.path(dataDIR, "outputFiles", "EAGU"),
clineMethod = "permutation",
prefix = "EAGU",
)
devtools::load_all()
# Subset individuals for only the populations I want
rasterPoint.list.subset <-
lapply(rasterPoint.list,
subsetIndividuals,
file.path(dataDIR, "eagu_inds.txt"))
# Correlate genomic clines/hybrid index with environment/lat/lon
clinesXenvironment(
clineList = eagu,
rasterPointValues = rasterPoint.list.subset,
clineLabels = c("EA", "Het", "GU"),
outputDIR = file.path(dataDIR, "outputFiles", "EAGU"),
clineMethod = "permutation",
prefix = "EAGU",
)
# Subset individuals for only the populations I want
rasterPoint.list.subset <-
lapply(rasterPoint.list,
subsetIndividuals,
file.path(dataDIR, "eatt_inds.txt"))
# Correlate genomic clines/hybrid index with environment/lat/lon
clinesXenvironment(
clineList = eatt,
rasterPointValues = rasterPoint.list.subset,
clineLabels = c("EA", "Het", "TT"),
outputDIR = file.path(dataDIR, "outputFiles", "EATT"),
clineMethod = "permutation",
prefix = "EATT"
)
gutt <- runIntrogress(
p1.file = file.path(dataDIR, "GUTT_p1data_nocoordscut.txt"),
p2.file = file.path(dataDIR, "GUTT_p2data.txt"),
admix.file = file.path(dataDIR, "GUTT_admix_nocoordscut.txt"),
loci.file = file.path(dataDIR, "GUTT_loci.txt"),
clineLabels = c("GU", "Het", "TT"),
minDelt = 0.8,
prefix = "GUTT",
outputDIR = file.path(dataDIR, "outputFiles"),
sep = "\t",
fixed = FALSE,
pop.id = FALSE,
ind.id = FALSE
)
saveRDS(gutt, file = file.path(dataDIR, "rawRoutput", "gutt_introgress.rds"))
# Subset individuals for only the populations I want
rasterPoint.list.subset <-
lapply(rasterPoint.list,
subsetIndividuals,
file.path(dataDIR, "gutt_inds.txt"))
# Correlate genomic clines/hybrid index with environment/lat/lon
clinesXenvironment(
clineList = gutt,
rasterPointValues = rasterPoint.list.subset,
clineLabels = c("GU", "Het", "TT"),
outputDIR = file.path(dataDIR, "outputFiles", "GUTT"),
clineMethod = "permutation",
prefix = "GUTT"
)
gutt <- runIntrogress(
p1.file = file.path(dataDIR, "GUTT_p1data.txt"),
p2.file = file.path(dataDIR, "GUTT_p2data.txt"),
admix.file = file.path(dataDIR, "GUTT_admix.txt"),
loci.file = file.path(dataDIR, "GUTT_loci.txt"),
clineLabels = c("GU", "Het", "TT"),
minDelt = 0.8,
prefix = "GUTT",
outputDIR = file.path(dataDIR, "outputFiles"),
sep = "\t",
fixed = FALSE,
pop.id = FALSE,
ind.id = FALSE
)
saveRDS(gutt, file = file.path(dataDIR, "rawRoutput", "gutt_introgress.rds"))
# Subset individuals for only the populations I want
rasterPoint.list.subset <-
lapply(rasterPoint.list,
subsetIndividuals,
file.path(dataDIR, "gutt_inds.txt"))
# Correlate genomic clines/hybrid index with environment/lat/lon
clinesXenvironment(
clineList = gutt,
rasterPointValues = rasterPoint.list.subset,
clineLabels = c("GU", "Het", "TT"),
outputDIR = file.path(dataDIR, "outputFiles", "GUTT"),
clineMethod = "permutation",
prefix = "GUTT"
)
# Correlate genomic clines/hybrid index with environment/lat/lon
clinesXenvironment(
clineList = gutt,
rasterPointValues = rasterPoint.list.subset,
clineLabels = c("GU", "Het", "TT"),
outputDIR = file.path(dataDIR, "outputFiles", "GUTT"),
clineMethod = "permutation",
prefix = "GUTT"
)
# Correlate genomic clines/hybrid index with environment/lat/lon
clinesXenvironment(
clineList = gutt,
rasterPointValues = rasterPoint.list.subset,
clineLabels = c("GU", "Het", "TT"),
outputDIR = file.path(dataDIR, "outputFiles", "GUTT"),
clineMethod = "permutation",
prefix = "GUTT", cor.method = "spearman"
)
warnings()
# Correlate genomic clines/hybrid index with environment/lat/lon
clinesXenvironment(
clineList = gutt,
rasterPointValues = rasterPoint.list.subset,
clineLabels = c("GU", "Het", "TT"),
outputDIR = file.path(dataDIR, "outputFiles", "GUTT"),
clineMethod = "permutation",
prefix = "GUTT",
cor.method = "auto"
)
devtools::document()
devtools::document()
devtools::load_all()
devtools::document()
devtools::load_all()
devtools::document()
devtools::load_all()
# Subset individuals for only the populations I want
rasterPoint.list.subset <-
lapply(rasterPoint.list,
subsetIndividuals,
file.path(dataDIR, "eagu_inds.txt"))
# Correlate genomic clines/hybrid index with environment/lat/lon
clinesXenvironment(
clineList = eagu,
rasterPointValues = rasterPoint.list.subset,
clineLabels = c("EA", "Het", "GU"),
outputDIR = file.path(dataDIR, "outputFiles", "EAGU"),
clineMethod = "permutation",
prefix = "EAGU",
)
devtools::document()
devtools::load_all()
# Subset individuals for only the populations I want
rasterPoint.list.subset <-
lapply(rasterPoint.list,
subsetIndividuals,
file.path(dataDIR, "eagu_inds.txt"))
# Correlate genomic clines/hybrid index with environment/lat/lon
clinesXenvironment(
clineList = eagu,
rasterPointValues = rasterPoint.list.subset,
clineLabels = c("EA", "Het", "GU"),
outputDIR = file.path(dataDIR, "outputFiles", "EAGU"),
clineMethod = "permutation",
prefix = "EAGU",
)
warnings()
setwd("D:/scripts/bgcPlotter/Rscripts/ClinePlotR")
rasterDIR <- "../../../../Dissertation/BOX/gis/bioclim_R"
dataDIR <- "../../../../Dissertation/BOX/introgress/"
envList <- readRDS(file.path(rasterDIR, "gis_Routput", "envList.rds"))
eagu <- readRDS(file.path(dataDIR, "rawRoutput", "eagu_introgress.rds"))
eatt <- readRDS(file.path(dataDIR, "rawRoutput", "eatt_introgress.rds"))
gutt <- readRDS(file.path(dataDIR, "rawRoutput", "gutt_introgress.rds"))
rasterPoint.list <- extractPointValues(envList)
devtools::document()
devtools::load_all()
rasterPoint.list <- extractPointValues(envList)
# Subset individuals for only the populations I want
rasterPoint.list.subset <-
lapply(rasterPoint.list,
subsetIndividuals,
file.path(dataDIR, "eagu_inds.txt"))
# Correlate genomic clines/hybrid index with environment/lat/lon
clinesXenvironment(
clineList = eagu,
rasterPointValues = rasterPoint.list.subset,
clineLabels = c("EA", "Het", "GU"),
outputDIR = file.path(dataDIR, "outputFiles", "EAGU"),
clineMethod = "permutation",
prefix = "EAGU",
)
warnings()
devtools::load_all()
# Correlate genomic clines/hybrid index with environment/lat/lon
clinesXenvironment(
clineList = eagu,
rasterPointValues = rasterPoint.list.subset,
clineLabels = c("EA", "Het", "GU"),
outputDIR = file.path(dataDIR, "outputFiles", "EAGU"),
clineMethod = "permutation",
prefix = "EAGU",
)
devtools::load_all()
devtools::load_all()
# Correlate genomic clines/hybrid index with environment/lat/lon
clinesXenvironment(
clineList = eagu,
rasterPointValues = rasterPoint.list.subset,
clineLabels = c("EA", "Het", "GU"),
outputDIR = file.path(dataDIR, "outputFiles", "EAGU"),
clineMethod = "permutation",
prefix = "EAGU",
)
devtools::load_all()
# Correlate genomic clines/hybrid index with environment/lat/lon
clinesXenvironment(
clineList = eagu,
rasterPointValues = rasterPoint.list.subset,
clineLabels = c("EA", "Het", "GU"),
outputDIR = file.path(dataDIR, "outputFiles", "EAGU"),
clineMethod = "permutation",
prefix = "EAGU",
)
devtools::load_all()
# Correlate genomic clines/hybrid index with environment/lat/lon
clinesXenvironment(
clineList = eagu,
rasterPointValues = rasterPoint.list.subset,
clineLabels = c("EA", "Het", "GU"),
outputDIR = file.path(dataDIR, "outputFiles", "EAGU"),
clineMethod = "permutation",
prefix = "EAGU",
)
devtools::load_all()
# Correlate genomic clines/hybrid index with environment/lat/lon
clinesXenvironment(
clineList = eagu,
rasterPointValues = rasterPoint.list.subset,
clineLabels = c("EA", "Het", "GU"),
outputDIR = file.path(dataDIR, "outputFiles", "EAGU"),
clineMethod = "permutation",
prefix = "EAGU",
)
devtools::load_all()
# Correlate genomic clines/hybrid index with environment/lat/lon
clinesXenvironment(
clineList = eagu,
rasterPointValues = rasterPoint.list.subset,
clineLabels = c("EA", "Het", "GU"),
outputDIR = file.path(dataDIR, "outputFiles", "EAGU"),
clineMethod = "permutation",
prefix = "EAGU",
)
devtools::load_all()
# Correlate genomic clines/hybrid index with environment/lat/lon
clinesXenvironment(
clineList = eagu,
rasterPointValues = rasterPoint.list.subset,
clineLabels = c("EA", "Het", "GU"),
outputDIR = file.path(dataDIR, "outputFiles", "EAGU"),
clineMethod = "permutation",
prefix = "EAGU",
)
devtools::load_all()
# Correlate genomic clines/hybrid index with environment/lat/lon
clinesXenvironment(
clineList = eagu,
rasterPointValues = rasterPoint.list.subset,
clineLabels = c("EA", "Het", "GU"),
outputDIR = file.path(dataDIR, "outputFiles", "EAGU"),
clineMethod = "permutation",
prefix = "EAGU",
)
devtools::load_all()
# Correlate genomic clines/hybrid index with environment/lat/lon
clinesXenvironment(
clineList = eagu,
rasterPointValues = rasterPoint.list.subset,
clineLabels = c("EA", "Het", "GU"),
outputDIR = file.path(dataDIR, "outputFiles", "EAGU"),
clineMethod = "permutation",
prefix = "EAGU",
)
devtools::document()
devtools::load_all()
# Correlate genomic clines/hybrid index with environment/lat/lon
clinesXenvironment(
clineList = eagu,
rasterPointValues = rasterPoint.list.subset,
clineLabels = c("EA", "Het", "GU"),
outputDIR = file.path(dataDIR, "outputFiles", "EAGU"),
clineMethod = "permutation",
prefix = "EAGU",
)
# Subset individuals for only the populations I want
rasterPoint.list.subset <-
lapply(rasterPoint.list,
subsetIndividuals,
file.path(dataDIR, "eatt_inds.txt"))
# Correlate genomic clines/hybrid index with environment/lat/lon
clinesXenvironment(
clineList = eatt,
rasterPointValues = rasterPoint.list.subset,
clineLabels = c("EA", "Het", "TT"),
outputDIR = file.path(dataDIR, "outputFiles", "EATT"),
clineMethod = "permutation",
prefix = "EATT"
)
# Subset individuals for only the populations I want
rasterPoint.list.subset <-
lapply(rasterPoint.list,
subsetIndividuals,
file.path(dataDIR, "eatt_inds.txt"))
# Correlate genomic clines/hybrid index with environment/lat/lon
clinesXenvironment(
clineList = eatt,
rasterPointValues = rasterPoint.list.subset,
clineLabels = c("EA", "Het", "TT"),
outputDIR = file.path(dataDIR, "outputFiles", "EATT"),
clineMethod = "permutation",
prefix = "EATT"
)
# Subset individuals for only the populations I want
rasterPoint.list.subset <-
lapply(rasterPoint.list,
subsetIndividuals,
file.path(dataDIR, "gutt_inds.txt"))
# Correlate genomic clines/hybrid index with environment/lat/lon
clinesXenvironment(
clineList = gutt,
rasterPointValues = rasterPoint.list.subset,
clineLabels = c("GU", "Het", "TT"),
outputDIR = file.path(dataDIR, "outputFiles", "GUTT"),
clineMethod = "permutation",
prefix = "GUTT",
cor.method = "auto"
)
devtools::load_all()
# Subset individuals for only the populations I want
rasterPoint.list.subset <-
lapply(rasterPoint.list,
subsetIndividuals,
file.path(dataDIR, "eagu_inds.txt"))
# Correlate genomic clines/hybrid index with environment/lat/lon
clinesXenvironment(
clineList = eagu,
rasterPointValues = rasterPoint.list.subset,
clineLabels = c("EA", "Het", "GU"),
outputDIR = file.path(dataDIR, "outputFiles", "EAGU"),
clineMethod = "permutation",
prefix = "EAGU"
)
# Subset individuals for only the populations I want
rasterPoint.list.subset <-
lapply(rasterPoint.list,
subsetIndividuals,
file.path(dataDIR, "eatt_inds.txt"))
# Correlate genomic clines/hybrid index with environment/lat/lon
clinesXenvironment(
clineList = eatt,
rasterPointValues = rasterPoint.list.subset,
clineLabels = c("EA", "Het", "TT"),
outputDIR = file.path(dataDIR, "outputFiles", "EATT"),
clineMethod = "permutation",
prefix = "EATT"
)
# Subset individuals for only the populations I want
rasterPoint.list.subset <-
lapply(rasterPoint.list,
subsetIndividuals,
file.path(dataDIR, "gutt_inds.txt"))
# Correlate genomic clines/hybrid index with environment/lat/lon
clinesXenvironment(
clineList = gutt,
rasterPointValues = rasterPoint.list.subset,
clineLabels = c("GU", "Het", "TT"),
outputDIR = file.path(dataDIR, "outputFiles", "GUTT"),
clineMethod = "permutation",
prefix = "GUTT",
cor.method = "auto"
)
